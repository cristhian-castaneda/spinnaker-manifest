name: Publish to Registry

on:
  push:
    branches:
      - master 

  pull_request:
    branches:
      - master
  workflow_dispatch:
jobs:
  build_docker_image:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: my-step
        run: echo "Hello World!"

  deploy_dev:
    name: Deploy Development
    needs: build_docker_image
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: https://localhost:8080

    steps:
      - name: my-step
        run: echo "Hello World!"

#       - uses: 8398a7/action-slack@v3
#         with:
#           status: ${{ job.status }}
#           fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
#         env:
#           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
#         if: always() # Pick up events even if the job fails or is canceled.

      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              text: `Pre-deployment approval pending for release Inspex (${{ github.event.repository.name }}) on stage *staging*`,
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "New request",
                    "emoji": true
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Type:*\nPaid Time Off"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Created by:*\n<example.com|Fred Enriquez>"
                    }
                  ]
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*When:*\nAug 10 - Aug 13"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "emoji": true,
                        "text": "Approve"
                      },
                      "style": "primary",
                      "value": "click_me_123"
                    },
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "emoji": true,
                        "text": "Reject"
                      },
                      "style": "danger",
                      "value": "click_me_123"
                    }
                  ]
                }
              ],
              attachments: [
              {
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `*Approvers* \n@Cristhian (${process.env.AS_COMMIT}) \n   ${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
              },
              {
                "name": "game",
                "text": "Thermonuclear War",
                "style": "danger",
                "type": "button",
                "value": "war",
                "confirm": {
                    "title": "Are you sure?",
                    "text": "Wouldn't you prefer a good game of chess?",
                    "ok_text": "Yes",
                    "dismiss_text": "No"
                 }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
        if: always() # Pick up events even if the job fails or is canceled.

  deploy_staging:
    name: Deploy Development
    needs: deploy_dev
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://localhost:8080

    steps:
      - name: my-step
        run: echo "Hello World!"

  deploy_prod:
    name: Deploy Production
    needs: deploy_staging
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://localhost:8080

    steps:
      - name: my-step
        run: echo "Hello World!"
